buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    // querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

// aop 파라미터 이름 가져오기 위한 설정
gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-parameters"
    }
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    compileOnly 'com.h2database:h2'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Thymeleaf 에서 사용할 java8 날짜 관련 라이브러리
    implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-java8time'

    //querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    // ModelMapper
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.4.4'
// https://mvnrepository.com/artifact/org.webjars/jquery
    implementation group: 'org.webjars', name: 'jquery', version: '3.6.0'

    //aop
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.4'


}

test {
    useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
   jpa = true
   querydslSourcesDir = querydslDir
}
sourceSets {
   main.java.srcDir querydslDir
}
compileQuerydsl{
   options.annotationProcessorPath = configurations.querydsl

}
configurations {
   compileOnly {
      extendsFrom annotationProcessor
   }
   querydsl.extendsFrom compileClasspath
}
compileQuerydsl.doFirst {
    if(file(querydslDir).exists())
        delete(file(querydslDir))
}
//querydsl 추가 끝

